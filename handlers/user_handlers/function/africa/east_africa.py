from misc import bot, dp
from aiogram import types
from handlers.user_handlers.helpers.generation_keyboard import UserGenerationKeyboard

import COVID19Py
from covid import Covid

covid = Covid()
covid19 = COVID19Py.COVID19()

@dp.message_handler(text = '–í–æ—Å—Ç–æ—á–Ω–∞—è –ê—Ñ—Ä–∏–∫–∞')
async def east_europe(message:types.Message):
    keyboard = UserGenerationKeyboard.east_africa()

    final_message = '–í—ã–±–µ—Ä–∏—Ç–µ <b>—Å—Ç—Ä–∞–Ω—É</b>:'
    await message.answer(final_message, reply_markup=keyboard, parse_mode='HTML')

@dp.message_handler(text = '–ö–µ–Ω–∏—èüá∞üá™')
async def ke_info(message:types.Message):
    ukraine_cases = covid.get_status_by_country_name('Kenya')
    confirmed = ukraine_cases['confirmed']
    deaths = ukraine_cases['deaths']
    recovered = ukraine_cases['recovered']

    location = covid19.getLocationByCountryCode("KE")
    population = location[0]['country_population']
    boleet = round(confirmed*100/population,2)
    umerlo = round(deaths*100/population,3)

    
    line = '-' * 30

    final_message = f"<b>–î–∞–Ω–Ω—ã–µ –≤ –ö–µ–Ω–∏–∏üá∞üá™:</b>\nü¶†–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: {confirmed:,} <b>—á–µ–ª.</b>\nüßë‚Äç‚öïÔ∏è–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {recovered:,} <b>—á–µ–ª.</b>\n‚ò†Ô∏è–°–º–µ—Ç—Ä–µ–π: {deaths:,} <b>—á–µ–ª.</b>\n{line}\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {population:,} —á–µ–ª.\n–ë–æ–ª–µ–µ—Ç: {boleet}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è\n–£–º–µ—Ä–ª–æ: {umerlo}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è"


    await message.answer(final_message, parse_mode='HTML')

@dp.message_handler(text = '–ú–æ–∑–∞–º–±–∏–∫üá≤üáø')
async def mz_info(message:types.Message):
    ukraine_cases = covid.get_status_by_country_name('Mozambique')
    confirmed = ukraine_cases['confirmed']
    deaths = ukraine_cases['deaths']
    recovered = ukraine_cases['recovered']

    location = covid19.getLocationByCountryCode("KE")
    population = location[0]['country_population']
    boleet = round(confirmed*100/population,2)
    umerlo = round(deaths*100/population,3)

    
    line = '-' * 30

    final_message = f"<b>–î–∞–Ω–Ω—ã–µ –≤ –ú–æ–∑–∞–º–±–∏–∫üá≤üáø:</b>\nü¶†–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: {confirmed:,} <b>—á–µ–ª.</b>\nüßë‚Äç‚öïÔ∏è–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {recovered:,} <b>—á–µ–ª.</b>\n‚ò†Ô∏è–°–º–µ—Ç—Ä–µ–π: {deaths:,} <b>—á–µ–ª.</b>\n{line}\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {population:,} —á–µ–ª.\n–ë–æ–ª–µ–µ—Ç: {boleet}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è\n–£–º–µ—Ä–ª–æ: {umerlo}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è"


    await message.answer(final_message, parse_mode='HTML')

@dp.message_handler(text = '–ë—É—Ä—É–Ω–¥–∏üáßüáÆ')
async def bi_info(message:types.Message):
    ukraine_cases = covid.get_status_by_country_name('Burundi')
    confirmed = ukraine_cases['confirmed']
    deaths = ukraine_cases['deaths']
    recovered = ukraine_cases['recovered']

    location = covid19.getLocationByCountryCode("BI")
    population = location[0]['country_population']
    boleet = round(confirmed*100/population,2)
    umerlo = round(deaths*100/population,3)

    
    line = '-' * 30

    final_message = f"<b>–î–∞–Ω–Ω—ã–µ –≤ –ë—É—Ä—É–Ω–¥–∏üáßüáÆ:</b>\nü¶†–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: {confirmed:,} <b>—á–µ–ª.</b>\nüßë‚Äç‚öïÔ∏è–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {recovered:,} <b>—á–µ–ª.</b>\n‚ò†Ô∏è–°–º–µ—Ç—Ä–µ–π: {deaths:,} <b>—á–µ–ª.</b>\n{line}\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {population:,} —á–µ–ª.\n–ë–æ–ª–µ–µ—Ç: {boleet}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è\n–£–º–µ—Ä–ª–æ: {umerlo}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è"


    await message.answer(final_message, parse_mode='HTML')

@dp.message_handler(text = '–ú–∞–¥–∞–≥–∞—Å–∫–∞—Äüá≤üá¨')
async def mg_info(message:types.Message):
    ukraine_cases = covid.get_status_by_country_name('Madagascar')
    confirmed = ukraine_cases['confirmed']
    deaths = ukraine_cases['deaths']
    recovered = ukraine_cases['recovered']

    location = covid19.getLocationByCountryCode("MG")
    population = location[0]['country_population']
    boleet = round(confirmed*100/population,2)
    umerlo = round(deaths*100/population,3)

    
    line = '-' * 30

    final_message = f"<b>–î–∞–Ω–Ω—ã–µ –≤ –ú–∞–¥–∞–≥–∞—Å–∫–∞—Ä–µüá≤üá¨:</b>\nü¶†–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: {confirmed:,} <b>—á–µ–ª.</b>\nüßë‚Äç‚öïÔ∏è–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {recovered:,} <b>—á–µ–ª.</b>\n‚ò†Ô∏è–°–º–µ—Ç—Ä–µ–π: {deaths:,} <b>—á–µ–ª.</b>\n{line}\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {population:,} —á–µ–ª.\n–ë–æ–ª–µ–µ—Ç: {boleet}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è\n–£–º–µ—Ä–ª–æ: {umerlo}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è"


    await message.answer(final_message, parse_mode='HTML')

@dp.message_handler(text = '–†—É–∞–Ω–¥–∞üá∑üáº')
async def rw_info(message:types.Message):
    ukraine_cases = covid.get_status_by_country_name('Rwanda')
    confirmed = ukraine_cases['confirmed']
    deaths = ukraine_cases['deaths']
    recovered = ukraine_cases['recovered']

    location = covid19.getLocationByCountryCode("RW")
    population = location[0]['country_population']
    boleet = round(confirmed*100/population,2)
    umerlo = round(deaths*100/population,3)

    
    line = '-' * 30

    final_message = f"<b>–î–∞–Ω–Ω—ã–µ –≤ –†—É–∞–Ω–¥–µüá∑üáº:</b>\nü¶†–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: {confirmed:,} <b>—á–µ–ª.</b>\nüßë‚Äç‚öïÔ∏è–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {recovered:,} <b>—á–µ–ª.</b>\n‚ò†Ô∏è–°–º–µ—Ç—Ä–µ–π: {deaths:,} <b>—á–µ–ª.</b>\n{line}\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {population:,} —á–µ–ª.\n–ë–æ–ª–µ–µ—Ç: {boleet}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è\n–£–º–µ—Ä–ª–æ: {umerlo}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è"


    await message.answer(final_message, parse_mode='HTML')

@dp.message_handler(text = '–°–æ–º–∞–ª–∏üá∏üá¥')
async def so_info(message:types.Message):
    ukraine_cases = covid.get_status_by_country_name('Somalia')
    confirmed = ukraine_cases['confirmed']
    deaths = ukraine_cases['deaths']
    recovered = ukraine_cases['recovered']

    location = covid19.getLocationByCountryCode("SO")
    population = location[0]['country_population']
    boleet = round(confirmed*100/population,2)
    umerlo = round(deaths*100/population,3)

    
    line = '-' * 30

    final_message = f"<b>–î–∞–Ω–Ω—ã–µ –≤ –°–æ–º–∞–ª–∏üá∏üá¥:</b>\nü¶†–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: {confirmed:,} <b>—á–µ–ª.</b>\nüßë‚Äç‚öïÔ∏è–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {recovered:,} <b>—á–µ–ª.</b>\n‚ò†Ô∏è–°–º–µ—Ç—Ä–µ–π: {deaths:,} <b>—á–µ–ª.</b>\n{line}\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {population:,} —á–µ–ª.\n–ë–æ–ª–µ–µ—Ç: {boleet}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è\n–£–º–µ—Ä–ª–æ: {umerlo}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è"


    await message.answer(final_message, parse_mode='HTML')

@dp.message_handler(text = '–≠—Ñ–∏–æ–ø–∏—èüá™üáπ')
async def et_info(message:types.Message):
    ukraine_cases = covid.get_status_by_country_name('Ethiopia')
    confirmed = ukraine_cases['confirmed']
    deaths = ukraine_cases['deaths']
    recovered = ukraine_cases['recovered']

    location = covid19.getLocationByCountryCode("ET")
    population = location[0]['country_population']
    boleet = round(confirmed*100/population,2)
    umerlo = round(deaths*100/population,3)

    
    line = '-' * 30

    final_message = f"<b>–î–∞–Ω–Ω—ã–µ –≤ –≠—Ñ–∏–æ–ø–∏–∏üá™üáπ:</b>\nü¶†–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: {confirmed:,} <b>—á–µ–ª.</b>\nüßë‚Äç‚öïÔ∏è–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {recovered:,} <b>—á–µ–ª.</b>\n‚ò†Ô∏è–°–º–µ—Ç—Ä–µ–π: {deaths:,} <b>—á–µ–ª.</b>\n{line}\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {population:,} —á–µ–ª.\n–ë–æ–ª–µ–µ—Ç: {boleet}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è\n–£–º–µ—Ä–ª–æ: {umerlo}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è"


    await message.answer(final_message, parse_mode='HTML')

@dp.message_handler(text = '–£–≥–∞–Ω–¥–∞üá∫üá¨')
async def ug_info(message:types.Message):
    ukraine_cases = covid.get_status_by_country_name('Uganda')
    confirmed = ukraine_cases['confirmed']
    deaths = ukraine_cases['deaths']
    recovered = ukraine_cases['recovered']

    location = covid19.getLocationByCountryCode("UG")
    population = location[0]['country_population']
    boleet = round(confirmed*100/population,2)
    umerlo = round(deaths*100/population,3)

    
    line = '-' * 30

    final_message = f"<b>–î–∞–Ω–Ω—ã–µ –≤ –£–≥–∞–Ω–¥–µüá∫üá¨:</b>\nü¶†–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: {confirmed:,} <b>—á–µ–ª.</b>\nüßë‚Äç‚öïÔ∏è–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {recovered:,} <b>—á–µ–ª.</b>\n‚ò†Ô∏è–°–º–µ—Ç—Ä–µ–π: {deaths:,} <b>—á–µ–ª.</b>\n{line}\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {population:,} —á–µ–ª.\n–ë–æ–ª–µ–µ—Ç: {boleet}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è\n–£–º–µ—Ä–ª–æ: {umerlo}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è"


    await message.answer(final_message, parse_mode='HTML')

@dp.message_handler(text = '–î–∂–∏–±—É—Ç–∏üá©üáØ')
async def dj_info(message:types.Message):
    ukraine_cases = covid.get_status_by_country_name('Djibouti')
    confirmed = ukraine_cases['confirmed']
    deaths = ukraine_cases['deaths']
    recovered = ukraine_cases['recovered']

    location = covid19.getLocationByCountryCode("DJ")
    population = location[0]['country_population']
    boleet = round(confirmed*100/population,2)
    umerlo = round(deaths*100/population,3)

    
    line = '-' * 30

    final_message = f"<b>–î–∞–Ω–Ω—ã–µ –≤ –î–∂–∏–±—É—Ç–∏üá©üáØ:</b>\nü¶†–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: {confirmed:,} <b>—á–µ–ª.</b>\nüßë‚Äç‚öïÔ∏è–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {recovered:,} <b>—á–µ–ª.</b>\n‚ò†Ô∏è–°–º–µ—Ç—Ä–µ–π: {deaths:,} <b>—á–µ–ª.</b>\n{line}\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {population:,} —á–µ–ª.\n–ë–æ–ª–µ–µ—Ç: {boleet}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è\n–£–º–µ—Ä–ª–æ: {umerlo}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è"


    await message.answer(final_message, parse_mode='HTML')

@dp.message_handler(text = '–°–µ–π—à–µ–ª—ãüá∏üá®')
async def sc_info(message:types.Message):
    ukraine_cases = covid.get_status_by_country_name('Seychelles')
    confirmed = ukraine_cases['confirmed']
    deaths = ukraine_cases['deaths']
    recovered = ukraine_cases['recovered']

    location = covid19.getLocationByCountryCode("SC")
    population = location[0]['country_population']
    boleet = round(confirmed*100/population,2)
    umerlo = round(deaths*100/population,3)

    
    line = '-' * 30

    final_message = f"<b>–î–∞–Ω–Ω—ã–µ –Ω–∞ –°–µ–π—à–µ–ª–∞—Öüá∏üá®:</b>\nü¶†–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: {confirmed:,} <b>—á–µ–ª.</b>\nüßë‚Äç‚öïÔ∏è–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {recovered:,} <b>—á–µ–ª.</b>\n‚ò†Ô∏è–°–º–µ—Ç—Ä–µ–π: {deaths:,} <b>—á–µ–ª.</b>\n{line}\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {population:,} —á–µ–ª.\n–ë–æ–ª–µ–µ—Ç: {boleet}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è\n–£–º–µ—Ä–ª–æ: {umerlo}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è"


    await message.answer(final_message, parse_mode='HTML')

@dp.message_handler(text = '–≠—Ä–∏—Ç—Ä–µ—èüá™üá∑')
async def er_info(message:types.Message):
    ukraine_cases = covid.get_status_by_country_name('Eritrea')
    confirmed = ukraine_cases['confirmed']
    deaths = ukraine_cases['deaths']
    recovered = ukraine_cases['recovered']

    location = covid19.getLocationByCountryCode("ER")
    population = 3214520
    boleet = round(confirmed*100/population,2)
    umerlo = round(deaths*100/population,3)

    
    line = '-' * 30

    final_message = f"<b>–î–∞–Ω–Ω—ã–µ –≤ –≠—Ä–∏—Ç—Ä–µ–µüá™üá∑:</b>\nü¶†–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: {confirmed:,} <b>—á–µ–ª.</b>\nüßë‚Äç‚öïÔ∏è–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {recovered:,} <b>—á–µ–ª.</b>\n‚ò†Ô∏è–°–º–µ—Ç—Ä–µ–π: {deaths:,} <b>—á–µ–ª.</b>\n{line}\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {population:,} —á–µ–ª.\n–ë–æ–ª–µ–µ—Ç: {boleet}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è\n–£–º–µ—Ä–ª–æ: {umerlo}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è"


    await message.answer(final_message, parse_mode='HTML')

