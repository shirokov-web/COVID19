from misc import bot, dp
from aiogram import types
from handlers.user_handlers.helpers.generation_keyboard import UserGenerationKeyboard

import COVID19Py
from covid import Covid

covid = Covid()
covid19 = COVID19Py.COVID19()

@dp.message_handler(text = '–Æ–≥–æ-–í–æ—Å—Ç–æ—á–Ω–∞—è –ê–∑–∏—è')
async def east_europe(message:types.Message):
    keyboard = UserGenerationKeyboard.southest_asia()

    final_message = '–í—ã–±–µ—Ä–∏—Ç–µ <b>—Å—Ç—Ä–∞–Ω—É</b>:'
    await message.answer(final_message, reply_markup=keyboard, parse_mode='HTML')

@dp.message_handler(text = '–¢–∞–∏–ª–∞–Ω–¥üáπüá≠')
async def th_info(message:types.Message):
    ukraine_cases = covid.get_status_by_country_name('Thailand')
    confirmed = ukraine_cases['confirmed']
    deaths = ukraine_cases['deaths']
    recovered = ukraine_cases['recovered']

    location = covid19.getLocationByCountryCode("TH")
    population = location[0]['country_population']
    boleet = round(confirmed*100/population,2)
    umerlo = round(deaths*100/population,3)

    
    line = '-' * 30

    final_message = f"<b>–î–∞–Ω–Ω—ã–µ –≤ –¢–∞–∏–ª–∞–Ω–¥–µüáπüá≠:</b>\nü¶†–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: {confirmed:,} <b>—á–µ–ª.</b>\nüßë‚Äç‚öïÔ∏è–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {recovered:,} <b>—á–µ–ª.</b>\n‚ò†Ô∏è–°–º–µ—Ç—Ä–µ–π: {deaths:,} <b>—á–µ–ª.</b>\n{line}\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {population:,} —á–µ–ª.\n–ë–æ–ª–µ–µ—Ç: {boleet}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è\n–£–º–µ—Ä–ª–æ: {umerlo}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è"


    await message.answer(final_message, parse_mode='HTML')

@dp.message_handler(text = '–í—å–µ—Ç–Ω–∞–ºüáªüá≥')
async def vn_info(message:types.Message):
    ukraine_cases = covid.get_status_by_country_name('Vietnam')
    confirmed = ukraine_cases['confirmed']
    deaths = ukraine_cases['deaths']
    recovered = ukraine_cases['recovered']

    location = covid19.getLocationByCountryCode("VN")
    population = location[0]['country_population']
    boleet = round(confirmed*100/population,2)
    umerlo = round(deaths*100/population,3)

    
    line = '-' * 30

    final_message = f"<b>–î–∞–Ω–Ω—ã–µ –≤ –í—å–µ—Ç–Ω–∞–º–µüáªüá≥:</b>\nü¶†–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: {confirmed:,} <b>—á–µ–ª.</b>\nüßë‚Äç‚öïÔ∏è–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {recovered:,} <b>—á–µ–ª.</b>\n‚ò†Ô∏è–°–º–µ—Ç—Ä–µ–π: {deaths:,} <b>—á–µ–ª.</b>\n{line}\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {population:,} —á–µ–ª.\n–ë–æ–ª–µ–µ—Ç: {boleet}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è\n–£–º–µ—Ä–ª–æ: {umerlo}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è"


    await message.answer(final_message, parse_mode='HTML')

@dp.message_handler(text = '–ò–Ω–¥–æ–Ω–µ–∑–∏—èüáÆüá©')
async def id_info(message:types.Message):
    ukraine_cases = covid.get_status_by_country_name('Indonesia')
    confirmed = ukraine_cases['confirmed']
    deaths = ukraine_cases['deaths']
    recovered = ukraine_cases['recovered']

    location = covid19.getLocationByCountryCode("ID")
    population = location[0]['country_population']
    boleet = round(confirmed*100/population,2)
    umerlo = round(deaths*100/population,3)

    
    line = '-' * 30

    final_message = f"<b>–î–∞–Ω–Ω—ã–µ –≤ –ò–Ω–¥–æ–Ω–µ–∑–∏–∏üáÆüá©:</b>\nü¶†–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: {confirmed:,} <b>—á–µ–ª.</b>\nüßë‚Äç‚öïÔ∏è–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {recovered:,} <b>—á–µ–ª.</b>\n‚ò†Ô∏è–°–º–µ—Ç—Ä–µ–π: {deaths:,} <b>—á–µ–ª.</b>\n{line}\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {population:,} —á–µ–ª.\n–ë–æ–ª–µ–µ—Ç: {boleet}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è\n–£–º–µ—Ä–ª–æ: {umerlo}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è"


    await message.answer(final_message, parse_mode='HTML')

@dp.message_handler(text = '–ë—Ä—É–Ω–µ–πüáßüá≥')
async def bn_info(message:types.Message):
    ukraine_cases = covid.get_status_by_country_name('Brunei')
    confirmed = ukraine_cases['confirmed']
    deaths = ukraine_cases['deaths']
    recovered = ukraine_cases['recovered']

    location = covid19.getLocationByCountryCode("BN")
    population = location[0]['country_population']
    boleet = round(confirmed*100/population,2)
    umerlo = round(deaths*100/population,3)

    
    line = '-' * 30

    final_message = f"<b>–î–∞–Ω–Ω—ã–µ –≤ –ë—Ä—É–Ω–µ–µüáßüá≥:</b>\nü¶†–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: {confirmed:,} <b>—á–µ–ª.</b>\nüßë‚Äç‚öïÔ∏è–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {recovered:,} <b>—á–µ–ª.</b>\n‚ò†Ô∏è–°–º–µ—Ç—Ä–µ–π: {deaths:,} <b>—á–µ–ª.</b>\n{line}\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {population:,} —á–µ–ª.\n–ë–æ–ª–µ–µ—Ç: {boleet}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è\n–£–º–µ—Ä–ª–æ: {umerlo}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è"


    await message.answer(final_message, parse_mode='HTML')

@dp.message_handler(text = '–ö–∞–º–±–æ–¥–∂–∞üá∞üá≠')
async def kh_info(message:types.Message):
    ukraine_cases = covid.get_status_by_country_name('Cambodia')
    confirmed = ukraine_cases['confirmed']
    deaths = ukraine_cases['deaths']
    recovered = ukraine_cases['recovered']

    location = covid19.getLocationByCountryCode("KH")
    population = location[0]['country_population']
    boleet = round(confirmed*100/population,2)
    umerlo = round(deaths*100/population,3)

    
    line = '-' * 30

    final_message = f"<b>–î–∞–Ω–Ω—ã–µ –≤ –ö–∞–º–±–æ–¥–∂–µüá∞üá≠:</b>\nü¶†–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: {confirmed:,} <b>—á–µ–ª.</b>\nüßë‚Äç‚öïÔ∏è–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {recovered:,} <b>—á–µ–ª.</b>\n‚ò†Ô∏è–°–º–µ—Ç—Ä–µ–π: {deaths:,} <b>—á–µ–ª.</b>\n{line}\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {population:,} —á–µ–ª.\n–ë–æ–ª–µ–µ—Ç: {boleet}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è\n–£–º–µ—Ä–ª–æ: {umerlo}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è"


    await message.answer(final_message, parse_mode='HTML')

@dp.message_handler(text = '–õ–∞–æ—Åüá±üá¶')
async def la_info(message:types.Message):
    ukraine_cases = covid.get_status_by_country_name('Laos')
    confirmed = ukraine_cases['confirmed']
    deaths = ukraine_cases['deaths']
    recovered = ukraine_cases['recovered']

    location = covid19.getLocationByCountryCode("LA")
    population = location[0]['country_population']
    boleet = round(confirmed*100/population,2)
    umerlo = round(deaths*100/population,3)

    
    line = '-' * 30

    final_message = f"<b>–î–∞–Ω–Ω—ã–µ –≤ –õ–∞–æ—Å–µüá±üá¶:</b>\nü¶†–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: {confirmed:,} <b>—á–µ–ª.</b>\nüßë‚Äç‚öïÔ∏è–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {recovered:,} <b>—á–µ–ª.</b>\n‚ò†Ô∏è–°–º–µ—Ç—Ä–µ–π: {deaths:,} <b>—á–µ–ª.</b>\n{line}\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {population:,} —á–µ–ª.\n–ë–æ–ª–µ–µ—Ç: {boleet}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è\n–£–º–µ—Ä–ª–æ: {umerlo}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è"


    await message.answer(final_message, parse_mode='HTML')

@dp.message_handler(text = '–¢–∏–º–æ—Ä - –õ–µ—à—Ç–µüáπüá±')
async def tl_info(message:types.Message):
    ukraine_cases = covid.get_status_by_country_name('Timor-Leste')
    confirmed = ukraine_cases['confirmed']
    deaths = ukraine_cases['deaths']
    recovered = ukraine_cases['recovered']

    location = covid19.getLocationByCountryCode("TL")
    population = location[0]['country_population']
    boleet = round(confirmed*100/population,2)
    umerlo = round(deaths*100/population,3)

    
    line = '-' * 30

    final_message = f"<b>–î–∞–Ω–Ω—ã–µ –≤ –¢–∏–º–æ—Ä-–õ–µ—à—Ç–µüáπüá±:</b>\nü¶†–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: {confirmed:,} <b>—á–µ–ª.</b>\nüßë‚Äç‚öïÔ∏è–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {recovered:,} <b>—á–µ–ª.</b>\n‚ò†Ô∏è–°–º–µ—Ç—Ä–µ–π: {deaths:,} <b>—á–µ–ª.</b>\n{line}\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {population:,} —á–µ–ª.\n–ë–æ–ª–µ–µ—Ç: {boleet}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è\n–£–º–µ—Ä–ª–æ: {umerlo}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è"


    await message.answer(final_message, parse_mode='HTML')

@dp.message_handler(text = '–ú–∞–ª–∞–π–∑–∏—èüá≤üáæ')
async def my_info(message:types.Message):
    ukraine_cases = covid.get_status_by_country_name('Malaysia')
    confirmed = ukraine_cases['confirmed']
    deaths = ukraine_cases['deaths']
    recovered = ukraine_cases['recovered']

    location = covid19.getLocationByCountryCode("TL")
    population = location[0]['country_population']
    boleet = round(confirmed*100/population,2)
    umerlo = round(deaths*100/population,3)

    
    line = '-' * 30

    final_message = f"<b>–î–∞–Ω–Ω—ã–µ –≤ –ú–∞–ª–∞–π–∑–∏–∏üá≤üáæ:</b>\nü¶†–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: {confirmed:,} <b>—á–µ–ª.</b>\nüßë‚Äç‚öïÔ∏è–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {recovered:,} <b>—á–µ–ª.</b>\n‚ò†Ô∏è–°–º–µ—Ç—Ä–µ–π: {deaths:,} <b>—á–µ–ª.</b>\n{line}\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {population:,} —á–µ–ª.\n–ë–æ–ª–µ–µ—Ç: {boleet}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è\n–£–º–µ—Ä–ª–æ: {umerlo}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è"


    await message.answer(final_message, parse_mode='HTML')

@dp.message_handler(text = '–°–∏–Ω–≥–∞–ø—É—Äüá∏üá¨')
async def sg_info(message:types.Message):
    ukraine_cases = covid.get_status_by_country_name('Singapore')
    confirmed = ukraine_cases['confirmed']
    deaths = ukraine_cases['deaths']
    recovered = ukraine_cases['recovered']

    location = covid19.getLocationByCountryCode("SG")
    population = location[0]['country_population']
    boleet = round(confirmed*100/population,2)
    umerlo = round(deaths*100/population,3)

    
    line = '-' * 30

    final_message = f"<b>–î–∞–Ω–Ω—ã–µ –≤ –°–∏–Ω–≥–∞–ø—É—Ä–µüá∏üá¨:</b>\nü¶†–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: {confirmed:,} <b>—á–µ–ª.</b>\nüßë‚Äç‚öïÔ∏è–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {recovered:,} <b>—á–µ–ª.</b>\n‚ò†Ô∏è–°–º–µ—Ç—Ä–µ–π: {deaths:,} <b>—á–µ–ª.</b>\n{line}\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {population:,} —á–µ–ª.\n–ë–æ–ª–µ–µ—Ç: {boleet}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è\n–£–º–µ—Ä–ª–æ: {umerlo}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è"


    await message.answer(final_message, parse_mode='HTML')

@dp.message_handler(text = '–§–∏–ª–∏–ø–ø–∏–Ω—ãüáµüá≠')
async def ph_info(message:types.Message):
    ukraine_cases = covid.get_status_by_country_name('Philippines')
    confirmed = ukraine_cases['confirmed']
    deaths = ukraine_cases['deaths']
    recovered = ukraine_cases['recovered']

    location = covid19.getLocationByCountryCode("SG")
    population = location[0]['country_population']
    boleet = round(confirmed*100/population,2)
    umerlo = round(deaths*100/population,3)

    
    line = '-' * 30

    final_message = f"<b>–î–∞–Ω–Ω—ã–µ –Ω–∞ –§–∏–ª–∏–ø–ø–∏–Ω–∞—Öüáµüá≠:</b>\nü¶†–ó–∞–±–æ–ª–µ–≤—à–∏—Ö: {confirmed:,} <b>—á–µ–ª.</b>\nüßë‚Äç‚öïÔ∏è–í—ã–∑–¥–æ—Ä–æ–≤–µ–ª–æ: {recovered:,} <b>—á–µ–ª.</b>\n‚ò†Ô∏è–°–º–µ—Ç—Ä–µ–π: {deaths:,} <b>—á–µ–ª.</b>\n{line}\n–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {population:,} —á–µ–ª.\n–ë–æ–ª–µ–µ—Ç: {boleet}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è\n–£–º–µ—Ä–ª–æ: {umerlo}% –Ω–∞—Å–µ–ª–µ–Ω–∏—è"


    await message.answer(final_message, parse_mode='HTML')

